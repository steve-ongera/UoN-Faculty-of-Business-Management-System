# Generated by Django 5.2.4 on 2025-10-16 15:10

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('main_application', '0002_event_is_published'),
    ]

    operations = [
        migrations.CreateModel(
            name='DataExportLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('export_type', models.CharField(max_length=100)),
                ('model_name', models.CharField(max_length=100)),
                ('record_count', models.IntegerField()),
                ('filters_applied', models.JSONField(blank=True, null=True)),
                ('fields_exported', models.JSONField(blank=True, null=True)),
                ('file_format', models.CharField(max_length=20)),
                ('file_size_bytes', models.BigIntegerField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_exports', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_exports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'data_export_logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='SystemSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('maintenance_mode', models.BooleanField(default=False)),
                ('maintenance_message', models.TextField(default='System is currently under maintenance. Please check back later.')),
                ('maintenance_started_at', models.DateTimeField(blank=True, null=True)),
                ('max_login_attempts', models.IntegerField(default=5)),
                ('lockout_duration_minutes', models.IntegerField(default=30)),
                ('session_timeout_minutes', models.IntegerField(default=60)),
                ('require_password_change_days', models.IntegerField(default=90)),
                ('api_rate_limit_per_minute', models.IntegerField(default=60)),
                ('enable_rate_limiting', models.BooleanField(default=True)),
                ('enable_audit_logging', models.BooleanField(default=True)),
                ('audit_log_retention_days', models.IntegerField(default=365)),
                ('log_view_actions', models.BooleanField(default=False)),
                ('enable_two_factor_auth', models.BooleanField(default=False)),
                ('enable_ip_whitelist', models.BooleanField(default=False)),
                ('whitelist_ips', models.TextField(blank=True, help_text='Comma-separated IP addresses')),
                ('security_alert_emails', models.TextField(blank=True, help_text='Comma-separated email addresses for security alerts')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('maintenance_started_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='maintenance_activations', to=settings.AUTH_USER_MODEL)),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='settings_updates', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'System Settings',
                'verbose_name_plural': 'System Settings',
                'db_table': 'system_settings',
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(blank=True, max_length=20)),
                ('username', models.CharField(max_length=150)),
                ('action_type', models.CharField(choices=[('CREATE', 'Create'), ('UPDATE', 'Update'), ('DELETE', 'Delete'), ('VIEW', 'View'), ('LOGIN', 'Login'), ('LOGOUT', 'Logout'), ('LOGIN_FAILED', 'Login Failed'), ('PASSWORD_CHANGE', 'Password Change'), ('PASSWORD_RESET', 'Password Reset'), ('PERMISSION_CHANGE', 'Permission Change'), ('EXPORT', 'Data Export'), ('IMPORT', 'Data Import'), ('BULK_ACTION', 'Bulk Action')], max_length=30)),
                ('action_description', models.TextField()),
                ('object_id', models.PositiveIntegerField(blank=True, null=True)),
                ('model_name', models.CharField(blank=True, max_length=100)),
                ('object_repr', models.CharField(blank=True, max_length=200)),
                ('old_values', models.JSONField(blank=True, null=True)),
                ('new_values', models.JSONField(blank=True, null=True)),
                ('changes_summary', models.TextField(blank=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('request_path', models.CharField(blank=True, max_length=500)),
                ('request_method', models.CharField(blank=True, max_length=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('severity', models.CharField(choices=[('LOW', 'Low'), ('MEDIUM', 'Medium'), ('HIGH', 'High'), ('CRITICAL', 'Critical')], default='LOW', max_length=20)),
                ('is_suspicious', models.BooleanField(default=False)),
                ('content_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='contenttypes.contenttype')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'audit_logs',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['user', '-timestamp'], name='audit_logs_user_id_e11c73_idx'), models.Index(fields=['action_type', '-timestamp'], name='audit_logs_action__952b82_idx'), models.Index(fields=['content_type', 'object_id'], name='audit_logs_content_b0ef47_idx'), models.Index(fields=['-timestamp'], name='audit_logs_timesta_e93820_idx')],
            },
        ),
        migrations.CreateModel(
            name='BlockedIP',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(db_index=True, unique=True)),
                ('reason', models.CharField(choices=[('BRUTE_FORCE', 'Brute Force Attack'), ('SUSPICIOUS_ACTIVITY', 'Suspicious Activity'), ('MANUAL_BLOCK', 'Manual Block'), ('AUTOMATED_BLOCK', 'Automated Block')], max_length=30)),
                ('description', models.TextField(blank=True)),
                ('blocked_at', models.DateTimeField(auto_now_add=True)),
                ('blocked_until', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('unblocked_at', models.DateTimeField(blank=True, null=True)),
                ('block_count', models.IntegerField(default=1)),
                ('blocked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='blocked_ips', to=settings.AUTH_USER_MODEL)),
                ('unblocked_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='unblocked_ips', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'blocked_ips',
                'ordering': ['-blocked_at'],
                'indexes': [models.Index(fields=['ip_address', 'is_active'], name='blocked_ips_ip_addr_621f18_idx'), models.Index(fields=['-blocked_at'], name='blocked_ips_blocked_b9fa7d_idx')],
            },
        ),
        migrations.CreateModel(
            name='LoginAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(db_index=True, max_length=150)),
                ('success', models.BooleanField(default=False)),
                ('failure_reason', models.CharField(blank=True, max_length=200)),
                ('ip_address', models.GenericIPAddressField(db_index=True)),
                ('user_agent', models.TextField(blank=True)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('timestamp', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('session_key', models.CharField(blank=True, max_length=40)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='login_attempts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'login_attempts',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['username', '-timestamp'], name='login_attem_usernam_93284a_idx'), models.Index(fields=['ip_address', '-timestamp'], name='login_attem_ip_addr_d622c8_idx'), models.Index(fields=['success', '-timestamp'], name='login_attem_success_22e1ce_idx')],
            },
        ),
        migrations.CreateModel(
            name='SecurityEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('event_type', models.CharField(choices=[('BRUTE_FORCE', 'Brute Force Attack'), ('UNAUTHORIZED_ACCESS', 'Unauthorized Access Attempt'), ('SUSPICIOUS_ACTIVITY', 'Suspicious Activity'), ('DATA_BREACH_ATTEMPT', 'Data Breach Attempt'), ('SQL_INJECTION', 'SQL Injection Attempt'), ('XSS_ATTEMPT', 'XSS Attack Attempt'), ('CSRF_VIOLATION', 'CSRF Violation'), ('RATE_LIMIT_EXCEEDED', 'Rate Limit Exceeded'), ('PRIVILEGE_ESCALATION', 'Privilege Escalation Attempt'), ('MASS_DATA_EXPORT', 'Mass Data Export'), ('UNUSUAL_BEHAVIOR', 'Unusual User Behavior')], max_length=30)),
                ('risk_level', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk'), ('CRITICAL', 'Critical Risk')], max_length=20)),
                ('status', models.CharField(choices=[('DETECTED', 'Detected'), ('INVESTIGATING', 'Under Investigation'), ('RESOLVED', 'Resolved'), ('FALSE_POSITIVE', 'False Positive'), ('IGNORED', 'Ignored')], default='DETECTED', max_length=20)),
                ('username', models.CharField(blank=True, max_length=150)),
                ('description', models.TextField()),
                ('details', models.JSONField(blank=True, null=True)),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True)),
                ('request_path', models.CharField(blank=True, max_length=500)),
                ('request_data', models.TextField(blank=True)),
                ('detected_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
                ('action_taken', models.TextField(blank=True)),
                ('auto_blocked', models.BooleanField(default=False)),
                ('block_duration_minutes', models.IntegerField(blank=True, null=True)),
                ('resolved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_security_events', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='security_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'security_events',
                'ordering': ['-detected_at'],
                'indexes': [models.Index(fields=['event_type', '-detected_at'], name='security_ev_event_t_ac083e_idx'), models.Index(fields=['risk_level', 'status'], name='security_ev_risk_le_26319f_idx'), models.Index(fields=['ip_address', '-detected_at'], name='security_ev_ip_addr_fbdb26_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserSession',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(db_index=True, max_length=40, unique=True)),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('device_type', models.CharField(blank=True, max_length=50)),
                ('browser', models.CharField(blank=True, max_length=100)),
                ('os', models.CharField(blank=True, max_length=100)),
                ('login_time', models.DateTimeField(auto_now_add=True)),
                ('last_activity', models.DateTimeField(auto_now=True)),
                ('logout_time', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('country', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_sessions',
                'ordering': ['-login_time'],
                'indexes': [models.Index(fields=['user', 'is_active'], name='user_sessio_user_id_bb1b83_idx'), models.Index(fields=['session_key'], name='user_sessio_session_cc84b9_idx')],
            },
        ),
    ]
